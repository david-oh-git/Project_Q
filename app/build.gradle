/*
 * MIT License
 *
 * Copyright (c) 2020 David O.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion versions.compiled_sdk
    buildToolsVersion versions.build_tools

    defaultConfig {
        applicationId "io.audioshinigami.projectq"
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        versionCode versions.version_code
        versionName versions.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation deps.kotlin
    //Kotlin Coroutines
    implementation deps.kotlin_coroutine
    // appcompat
    implementation deps.appcompat
    implementation deps.material
    implementation deps.constraintlayout
    implementation deps.core_ktx
    // Timber
    implementation deps.timber
    // Room DB
    implementation deps.room_db
    implementation deps.room_ktx
    kapt deps.room_kapt
    // Navigation
    implementation deps.nav_fragments
    implementation deps.nav_ui
    // viewModel
    implementation deps.viewmodel
    // dagger hilt
    implementation deps.dagger
    kapt deps.dagger_kapt
    // Crashlytics
    implementation deps.crashlytics
    implementation deps.preference


    // Unit test
    testImplementation deps.junit
    testImplementation deps.truth
    // dagger testing
    testImplementation deps.dagger_test
    testImplementation deps.dagger_test_kapt

    //
    androidTestImplementation deps.androidx_junit

    // modules
    implementation project(':feature:feature_stopwatch')

}
